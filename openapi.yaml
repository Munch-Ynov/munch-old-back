openapi: 3.0.3
info:
  title: API NetWish
  description: API for recommendation films and series, based on the user's preferences in TMDB.
  contact:
    email: dev@netWish.com
  version: 2.0.0
servers:
  - url: http://localhost:3000
    description: Local server
    variables:
      protocol:
        default: http
        enum:
          - http
          - https
      server:
        default: localhost

tags:
  - name: User
    description: User management
  - name: films
    description: Films management
  - name: series
    description: Series management
  - name: recommendations
    description: Recommendations management
  - name: favoris
    description: Favoris management
  - name: api-docs
    description: API documentation

paths:
  /users:
    get:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: Get all users
      description: Get all users
      operationId: getUsers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
          $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
    post:
      tags:
        - User
      summary: Create a user
      description: Create a user
      operationId: createUser
      requestBody:
        description: User to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              firstName: John
              lastName: Doe
              email: 'john.doe@outlook.com'
              password: '123456'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                firstName: John
                lastName: Doe
                email: 'john.doe@outlook.com'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
  /users/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: Get a user
      description: Get a user
      operationId: getUser
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                firstName: John
                lastName: Doe
                email: 'john.doe@outlook.com'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
          $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
    put:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: Update a user
      description: Update a user
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema:
            type: string
      requestBody:
        description: User to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
                firstName: John
                lastName: Doe
                email: 'john.doe@outlook.com'
                password: '123456'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                firstName: John
                lastName: Doe
                email: 'john.doe@outlook.com'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
          $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
    delete:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: Delete a user
      description: Delete a user
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                response: User deleted
        '400':
          description: Bad request
        '401':
          description: Unauthorized
          $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
  /users/login:
    post:
      tags:
        - User
      summary: Login a user
      description: Login a user
      operationId: loginUser
      requestBody:
        description: User to login
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              email: 'john.doe@outlook.com'
              password: '123456'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                response: User logged in
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
  /recommandations:
    get:
      security:
        - bearerAuth: []
      tags:
        - recommendations
      summary: Get all recommendations
      description: Get all recommendations
      operationId: getRecommendations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/recommendations'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
          $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
  /favoris:
    post:
      security:
        - bearerAuth: []
      tags:
        - favoris
      summary: Create a favoris
      description: Create a favoris
      operationId: createFavoris
      requestBody:
        description: Favoris to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/favoris'
            example:
              idUser: 1
              idMedia: 124
              title: 'The Lord of the Rings: The Fellowship of the Ring'
              type: 'movie'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/favoris'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
          $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
    delete:
      security:
        - bearerAuth: []
      tags:
        - favoris
      summary: Delete a favoris
      description: Delete a favoris
      operationId: deleteFavoris
      requestBody:
        description: Favoris to delete
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/favoris'
            example:
              idUser: 1
              idMedia: 124
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                response: Favoris deleted
        '400':
          description: Bad request
        '401':
          description: Unauthorized
          $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
  /favoris/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - favoris
      summary: Get user favoris
      description: Get user favoris
      operationId: getFavorisById
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/favoris'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
          $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
  /films:
    get:
      security:
        - bearerAuth: []
      tags:
        - films
      summary: Get all films
      description: Get all films
      operationId: getFilms
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/films'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
          $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
  /series:
    get:
      security:
        - bearerAuth: []
      tags:
        - series
      summary: Get all series
      description: Get all series
      operationId: getSeries
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/series'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
          $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
  /api-docs:
    get:
      tags:
        - api-docs
      summary: Get doc
      description: Get doc
      operationId: getDoc
      responses:
        '200':
          description: OK

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: The auto-generated id of the user
        firstName:
          type: string
          description: The first name of the user
        lastName:
          type: string
          description: The last name of the user
        email:
          type: string
          description: The email of the user
          format: email
        password:
          type: string
          description: The password of the user
        admin:
          type: boolean
          description: The admin of the user
          default: false
    recommendations:
      type: object
      properties:
        adult:
          type: boolean
          description: If it's an adult film
        backdrop_path:
          type: string
          description: The backdrop path of the films
        genre_ids:
          type: array
          description: The genre ids of the films
          items:
            type: integer
        id:
          type: integer
          description: The id of the films
        original_language:
          type: string
          description: The original language of the films
        original_title:
          type: string
          description: The original title of the films
        overview:
          type: string
          description: The overview of the films
        popularity:
          type: number
          description: The popularity of the films
        poster_path:
          type: string
          description: The poster path of the films
        release_date:
          type: string
          description: The release date of the films
        title:
          type: string
          description: The title of the films
        video:
          type: boolean
          description: If it's a video
        vote_average:
          type: number
          description: The vote average of the films
        vote_count:
          type: integer
          description: The vote count of the films
    films:
      type: object
      properties:
        page:
          type: integer
        result:
          type: object
          properties:
            poster_path:
              type: string
            adult:
              type: boolean
            overview:
              type: string
            release_date:
              type: string
            genre_ids:
              type: array
              items:
                type: integer
            id:
              type: integer
            original_title:
              type: string
            original_language:
              type: string
            title:
              type: string
            backdrop_path:
              type: string
            popularity:
              type: number
            vote_count:
              type: number
            video:
              type: boolean
            vote_average:
              type: number
    series:
      type: object
      properties:
        page:
          type: integer
        results:
          type: object
          properties:
            poster_path:
              type: string
            popularity:
              type: number
            id:
              type: integer
            backdrop_path:
              type: string
            vote_average:
              type: number
            overview:
              type: string
            first_air_date:
              type: string
            origin_country:
              type: array
              items:
                type: string
            genre_ids:
              type: array
              items:
                type: integer
            original_language:
              type: string
            vote_count:
              type: integer
            name:
              type: string
            original_name:
              type: string
    favoris:
      type: object
      properties:
        idUser:
          type: integer
        idMedia:
          type: integer
        title:
          type: string
        type:
          type: string
    UnauthorizedError:
      description: Access token is missing or invalid